{"version":3,"file":"static/js/492.fec2b68e.chunk.js","mappings":"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","sources":["api_service/api.js","components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '85016821a1bc8ff98f458419e9b647f9';\n\nexport const requestSearchedMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n\n  padding: 8px 0;\n  margin-left: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  color: black;\n  text-decoration: none;\n  font-size: 19px;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: #850000;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  margin-bottom: 10px;\n  padding-left: 20px;\n  padding-bottom: 10px;\n  display: flex;\n  gap: 10px;\n  box-shadow: 0px 3px 3px #d6d6d6;\n  & img {\n    width: 300px;\n  }\n  & h2 {\n    color: #850000;\n  }\n`;\n\nexport const StyledDiv = styled.div`\n  margin-bottom: 10px;\n  padding-left: 0;\n  padding-bottom: 10px;\n  display: flex;\n  gap: 38px;\n\n  & .info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 7px;\n    height: 30px;\n    width: 105px;\n    font-weight: 500;\n    text-align: center;\n    color: #850000;\n    border-radius: 4px;\n    border: solid 1px #850000;\n    background-color: white;\n    &:hover {\n      background-color: #850000;\n      color: white;\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport { StyledDiv, StyledSection } from './MovieCard.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nconst MovieCard = ({ movie }) => {\n  const releaseYear = parseInt(movie.release_date);\n  const location = useLocation();\n\n  return (\n    <>\n      <StyledSection>\n        <img\n          src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n          alt={movie.overview}\n          width=\"200\"\n        />\n        <div>\n          <h2>\n            {movie.title} ({releaseYear})\n          </h2>\n          <p>User Score: {movie.vote_average}</p>\n          <p>\n            <b>Overview</b>: {movie.overview}\n          </p>\n          <p>\n            <b>Genres:</b> {movie?.genres?.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </StyledSection>\n      <StyledDiv>\n        <NavLink state={{ from: location?.state?.from }} to=\"cast\">\n          <p className=\"info\">Cast</p>\n        </NavLink>\n        <NavLink state={{ from: location?.state?.from }} to=\"reviews\">\n          <p className=\"info\">Reviews</p>\n        </NavLink>\n      </StyledDiv>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import React, { useState, useEffect, Suspense, lazy } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { requestMoviesById } from 'api_service/api';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nconst MovieDetails = () => {\n  const { id: movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    fetchMoviesById(movieId);\n  }, [movieId]);\n\n  const fetchMoviesById = async movieId => {\n    try {\n      const data = await requestMoviesById(movieId);\n      setMovie(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <BackLink to={location?.state?.from ?? '/'}>â¬… Go back</BackLink>\n      <MovieCard movie={movie} />\n\n      <Suspense>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />}></Route>\n          <Route path=\"reviews\" element={<Reviews />}></Route>\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","requestSearchedMovies","query","axios","data","requestTrendingMovies","requestMoviesById","movieId","requestMoviesCredits","requestMoviesReviews","StyledLink","styled","Link","BackLink","to","children","StyledSection","StyledDiv","movie","releaseYear","parseInt","release_date","location","useLocation","src","poster_path","alt","overview","width","title","vote_average","genres","map","genre","name","join","state","from","className","Cast","lazy","Reviews","useParams","id","useState","setMovie","useEffect","fetchMoviesById","console","log","Suspense","path","element"],"sourceRoot":""}