{"version":3,"file":"static/js/593.b7d1cf0f.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAqB,mCAAG,WAAMC,GAAN,yFACZC,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBACiDE,EADjD,gCADY,uBAC3BE,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,sDAQrBC,EAAqB,mCAAG,sGACZF,EAAAA,EAAAA,IAAA,kEACsCH,IAF1B,uBAC3BI,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,qDAQrBE,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBACoCP,EADpC,oBADQ,uBACvBI,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBI,EAAoB,mCAAG,WAAMD,GAAN,yFACXJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BAC4CP,EAD5C,oBADW,uBAC1BI,EAD0B,EAC1BA,KAD0B,kBAK3BA,GAL2B,2CAAH,sDAQpBK,EAAoB,mCAAG,WAAMF,GAAN,yFACXJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,6BAC6CP,EAD7C,2BADW,uBAC1BI,EAD0B,EAC1BA,KAD0B,kBAK3BA,GAL2B,2CAAH,qD,4FClCpBM,E,OAAgBC,GAAAA,QAAH,oJ,SC+B1B,EA5BkB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACzBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACL,EAAD,WACGG,IAAS,wBAAKA,KACf,wBACGD,EAAWI,KAAI,SAAAC,GAAa,OAC3B,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAcE,IAAMC,MAAO,CAAEC,KAAMP,GAAxD,SACGG,EAAcJ,SAFVI,EAAcE,GADI,QAUpC,C,uICpBYG,E,OAAaX,GAAAA,KAAH,4kB,SCqCvB,EAnCmB,SAAC,GAAkB,IAAhBY,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KAiBA,OACE,+BACE,UAACH,EAAD,CAAYC,SAbK,SAAAG,GACnBA,EAAEC,iBAEmB,KAAjBzB,EAAM0B,QAKVL,EAASrB,GACTuB,EAAS,KALPI,MAAM,mBAMT,EAGG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,MAAO9B,EACP+B,SAtBY,SAAAP,GAClBD,EAASC,EAAEQ,cAAcF,MAAMG,cAChC,EAqBOC,aAAa,MACbC,WAAS,KAEX,mBAAQP,KAAK,SAAb,wBAIP,E,iBCOD,EArCe,WACb,OAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA4ChB,EAAAA,EAAAA,UAAS,IAArD,eAAOiB,EAAP,KAAuBC,EAAvB,KA0BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMzC,EAAQqC,EAAaK,IAAI,SAE/B,GAAK1C,EAAL,CAIA,IAAM2C,EAAmB,mCAAG,gHAEE5C,EAAAA,EAAAA,IAAsBC,GAFxB,gBAEhB4C,EAFgB,EAEhBA,QACRJ,EAAkBI,GAHM,gDAKxBC,QAAQC,IAAR,MALwB,yDAAH,qDASzBH,EAAoB3C,EAXnB,CAYF,GAAE,CAACqC,KAGF,iCACE,SAAC,EAAD,CAAYhB,SA1BS,SAAArB,GACvBsC,EAAgB,CAAEtC,MAAAA,IAClBwC,EAAkB,GACnB,IAwBID,EAAeQ,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWtC,WAAY6B,MAG1D,C","sources":["api_service/api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '85016821a1bc8ff98f458419e9b647f9';\n\nexport const requestSearchedMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  & h2 {\n    margin-left: 20px;\n    margin-bottom: 0;\n    font-size: 28px;\n  }\n  & li {\n    margin-bottom: 5px;\n  }\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledSection } from './MovieList.styled';\n\nconst MovieList = ({ moviesList, title }) => {\n  const location = useLocation();\n\n  return (\n    <StyledSection>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {moviesList.map(searchedMovie => (\n          <li key={searchedMovie.id}>\n            <Link to={`/movies/${searchedMovie.id}`} state={{ from: location }}>\n              {searchedMovie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </StyledSection>\n  );\n};\n\nMovieList.propTypes = {\n  searchedMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  margin-left: 20px;\n  margin-top: 40px;\n  & input {\n    margin-right: 10px;\n    padding-left: 15px;\n    width: 250px;\n    height: 30px;\n    border: solid 1px #850000;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n  & button {\n    height: 35px;\n    width: 105px;\n    font-size: 18px;\n    font-weight: 500;\n    text-align: center;\n    color: #850000;\n    border-radius: 4px;\n    border: solid 1px #850000;\n    background-color: white;\n    &:hover {\n      background-color: #850000;\n      color: white;\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { StyledForm } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Enter your query');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleInput}\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <button type=\"submit\">Search</button>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { requestSearchedMovies } from 'api_service/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [searchedMovies, setsearchedMovies] = useState([]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    setsearchedMovies([]);\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (!query) {\n      return;\n    }\n\n    const fetchSearchedMovies = async () => {\n      try {\n        const { results } = await requestSearchedMovies(query);\n        setsearchedMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSearchedMovies(query);\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleFormSubmit} />\n      {searchedMovies.length > 0 && <MovieList moviesList={searchedMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","requestSearchedMovies","query","axios","data","requestTrendingMovies","requestMoviesById","movieId","requestMoviesCredits","requestMoviesReviews","StyledSection","styled","moviesList","title","location","useLocation","map","searchedMovie","to","id","state","from","StyledForm","onSubmit","useState","setQuery","e","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","useSearchParams","searchParams","setSearchParams","searchedMovies","setsearchedMovies","useEffect","get","fetchSearchedMovies","results","console","log","length","MovieList"],"sourceRoot":""}