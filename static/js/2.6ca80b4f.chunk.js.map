{"version":3,"file":"static/js/2.6ca80b4f.chunk.js","mappings":"6SAEMA,EAAU,mCAEHC,EAAqB,mCAAG,WAAMC,GAAN,yFACZC,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBACiDE,EADjD,gCADY,uBAC3BE,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,sDAQrBC,EAAqB,mCAAG,sGACZF,EAAAA,EAAAA,IAAA,kEACsCH,IAF1B,uBAC3BI,EAD2B,EAC3BA,KAD2B,kBAK5BA,GAL4B,2CAAH,qDAQrBE,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBACoCP,EADpC,oBADQ,uBACvBI,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBI,EAAoB,mCAAG,WAAMD,GAAN,yFACXJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BAC4CP,EAD5C,oBADW,uBAC1BI,EAD0B,EAC1BA,KAD0B,kBAK3BA,GAL2B,2CAAH,sDAQpBK,EAAoB,mCAAG,WAAMF,GAAN,yFACXJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,6BAC6CP,EAD7C,2BADW,uBAC1BI,EAD0B,EAC1BA,KAD0B,kBAK3BA,GAL2B,2CAAH,qD,6HClCpBM,E,OAAgBC,GAAAA,QAAH,gY,SCsB1B,EArBoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,SAACF,EAAD,WACE,wBACGE,EAAQC,OAAS,EAChBD,EAAQE,KAAI,SAAAC,GACV,OACE,2BACE,iBAAMC,UAAU,SAAhB,SAA0BD,EAAOE,UACjC,cAAGD,UAAU,UAAb,SAAwBD,EAAOG,YAFxBH,EAAOI,GAKnB,KAED,yEAKT,E,kBCQD,EAzBgB,WACd,IAAYZ,GAAYa,EAAAA,EAAAA,MAAhBD,GAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAmBjB,EACpB,GAAE,CAACA,IAEJ,IAAMiB,EAAkB,mCAAG,WAAMjB,GAAN,mGAEGE,EAAAA,EAAAA,IAAqBF,GAFxB,gBAEfkB,EAFe,EAEfA,QACRH,EAAWG,GAHY,gDAKvBC,QAAQC,IAAR,MALuB,yDAAH,sDASxB,OACE,+BACE,SAAC,EAAD,CAAaf,QAASA,KAG3B,C","sources":["api_service/api.js","components/Reviews/ReviewsList.styled.js","components/Reviews/ReviewsList.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '85016821a1bc8ff98f458419e9b647f9';\n\nexport const requestSearchedMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  & ul {\n    display: flex;\n    flex-direction: column;\n    gap: 22px;\n  }\n  & li {\n    padding: 20px;\n    border: solid 1px #850000;\n    border-radius: 4px;\n\n    & .author {\n      font-size: 26px;\n      font-weight: 600;\n      color: #850000;\n    }\n    & .content {\n      font-size: 16px;\n    }\n    & p {\n      margin-left: 0;\n    }\n  }\n`;\n","import React from 'react';\nimport { StyledSection } from './ReviewsList.styled';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <StyledSection>\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <span className=\"author\">{review.author}</span>\n                <p className=\"content\">{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>Sorry, there are no reviews for the movie.</p>\n        )}\n      </ul>\n    </StyledSection>\n  );\n};\n\nexport default ReviewsList;\n","import ReviewsList from 'components/Reviews/ReviewsList';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMoviesReviews } from 'api_service/api';\n\nconst Reviews = () => {\n  const { id: movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId);\n  }, [movieId]);\n\n  const fetchMoviesReviews = async movieId => {\n    try {\n      const { results } = await requestMoviesReviews(movieId);\n      setReviews(results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <ReviewsList reviews={reviews} />\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","requestSearchedMovies","query","axios","data","requestTrendingMovies","requestMoviesById","movieId","requestMoviesCredits","requestMoviesReviews","StyledSection","styled","reviews","length","map","review","className","author","content","id","useParams","useState","setReviews","useEffect","fetchMoviesReviews","results","console","log"],"sourceRoot":""}