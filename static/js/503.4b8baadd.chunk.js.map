{"version":3,"file":"static/js/503.4b8baadd.chunk.js","mappings":"8QAEaA,EAAcC,EAAAA,GAAAA,QAAH,iEAKXC,EAAYD,EAAAA,GAAAA,GAAH,wlBA+BTE,EAAYF,EAAAA,GAAAA,IAAH,kH,SCDtB,EAlCiB,SAAC,GAAqB,IAAnBG,EAAkB,EAAlBA,YAClB,OACE,SAACJ,EAAD,WACE,SAACE,EAAD,UACGE,EAAYC,KAAI,SAAAC,GACf,OACE,0BAC+B,OAA5BA,EAAWC,cACV,gBACEC,IAAI,gCACJC,IAAI,eACJC,MAAM,SAGR,gBACEF,IAAG,8CAAyCF,EAAWC,cACvDE,IAAKH,EAAWK,UAChBD,MAAM,SAGV,UAACP,EAAD,YACE,wBAAKG,EAAWM,QAChB,wBACE,uBAAIN,EAAWK,mBAjBZL,EAAWO,GAsBvB,OAIR,ECDD,EA7Ba,WACX,IAAYC,GAAYC,EAAAA,EAAAA,MAAhBF,GAER,GAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOZ,EAAP,KAAoBa,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAmBL,EACpB,GAAE,CAACA,IAEJ,IAAMK,EAAkB,mCAAG,WAAML,GAAN,mGAEAM,EAAAA,EAAAA,IAAqBN,GAFrB,gBAEfO,EAFe,EAEfA,KACRJ,EAAeI,GAHQ,gDAKvBC,QAAQC,IAAR,MALuB,yDAAH,sDASxB,OACE,8BACGnB,EAAYoB,OAAS,GACpB,SAAC,EAAD,CAAUpB,YAAaA,KAEvB,mEAIP,C","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastSection = styled.section`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const ActorList = styled.ul`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n\n  & li {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: calc((100% - 36px) / 4);\n    border-radius: 5px;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n\n    & h3 {\n      margin: 0;\n      margin-bottom: 5px;\n      font-size: 22px;\n    }\n    & p {\n      margin: 0;\n      margin-bottom: 5px;\n      font-size: 18px;\n    }\n    & img {\n      width: 100%;\n      height: auto;\n    }\n  }\n`;\n\nexport const ActorInfo = styled.div`\n  box-sizing: border-box;\n  height: 90px;\n  padding: 20px 12px;\n  text-align: center;\n`;\n","import React from 'react';\nimport { CastSection, ActorList, ActorInfo } from './CastList.styled';\n\nconst CastList = ({ castMembers }) => {\n  return (\n    <CastSection>\n      <ActorList>\n        {castMembers.map(castMember => {\n          return (\n            <li key={castMember.id}>\n              {castMember.profile_path === null ? (\n                <img\n                  src=\"../../images/avatar_empty.png\"\n                  alt=\"avatar_empty\"\n                  width=\"150\"\n                />\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/original/${castMember.profile_path}`}\n                  alt={castMember.character}\n                  width=\"150\"\n                />\n              )}\n              <ActorInfo>\n                <h3>{castMember.name}</h3>\n                <p>\n                  <i>{castMember.character}</i>\n                </p>\n              </ActorInfo>\n            </li>\n          );\n        })}\n      </ActorList>\n    </CastSection>\n  );\n};\n\nexport default CastList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMoviesCredits } from 'api_service/api';\nimport CastList from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const { id: movieId } = useParams();\n\n  const [castMembers, setCastMembers] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCredits(movieId);\n  }, [movieId]);\n\n  const fetchMoviesCredits = async movieId => {\n    try {\n      const { cast } = await requestMoviesCredits(movieId);\n      setCastMembers(cast);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {castMembers.length > 0 ? (\n        <CastList castMembers={castMembers} />\n      ) : (\n        <p>Sorry, there is no cast for the movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastSection","styled","ActorList","ActorInfo","castMembers","map","castMember","profile_path","src","alt","width","character","name","id","movieId","useParams","useState","setCastMembers","useEffect","fetchMoviesCredits","requestMoviesCredits","cast","console","log","length"],"sourceRoot":""}